{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryMsg",
  "oneOf": [
    {
      "description": "Gets the governance module's config. Returns `state::Config`.",
      "type": "object",
      "required": [
        "config"
      ],
      "properties": {
        "config": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Gets information about a proposal. Returns `proposals::Proposal`.",
      "type": "object",
      "required": [
        "proposal"
      ],
      "properties": {
        "proposal": {
          "type": "object",
          "required": [
            "proposal_id"
          ],
          "properties": {
            "proposal_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Lists all the proposals that have been cast in this module. Returns `query::ProposalListResponse`.",
      "type": "object",
      "required": [
        "list_proposals"
      ],
      "properties": {
        "list_proposals": {
          "type": "object",
          "properties": {
            "limit": {
              "description": "The maximum number of proposals to return as part of this query. If no limit is set a max of 30 proposals will be returned.",
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "start_after": {
              "description": "The proposal ID to start listing proposals after. For example, if this is set to 2 proposals with IDs 3 and higher will be returned.",
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Lists all of the proposals that have been cast in this module in decending order of proposal ID. Returns `query::ProposalListResponse`.",
      "type": "object",
      "required": [
        "reverse_proposals"
      ],
      "properties": {
        "reverse_proposals": {
          "type": "object",
          "properties": {
            "limit": {
              "description": "The maximum number of proposals to return as part of this query. If no limit is set a max of 30 proposals will be returned.",
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "start_before": {
              "description": "The proposal ID to start listing proposals before. For example, if this is set to 6 proposals with IDs 5 and lower will be returned.",
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Returns the number of proposals that have been created in this module.",
      "type": "object",
      "required": [
        "proposal_count"
      ],
      "properties": {
        "proposal_count": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Returns a voters position on a propsal. Returns `query::VoteResponse`.",
      "type": "object",
      "required": [
        "get_vote"
      ],
      "properties": {
        "get_vote": {
          "type": "object",
          "required": [
            "proposal_id",
            "voter"
          ],
          "properties": {
            "proposal_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "voter": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Lists all of the votes that have been cast on a proposal. Returns `VoteListResponse`.",
      "type": "object",
      "required": [
        "list_votes"
      ],
      "properties": {
        "list_votes": {
          "type": "object",
          "required": [
            "proposal_id"
          ],
          "properties": {
            "limit": {
              "description": "The maximum number of votes to return in response to this query. If no limit is specified a max of 30 are returned.",
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "proposal_id": {
              "description": "The proposal to list the votes of.",
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "start_after": {
              "description": "The voter to start listing votes after. Ordering is done alphabetically.",
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Lists all of the consumers of proposal hooks for this module.",
      "type": "object",
      "required": [
        "proposal_hooks"
      ],
      "properties": {
        "proposal_hooks": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Lists all of the consumers of vote hooks for this module. Returns indexable_hooks::HooksResponse.",
      "type": "object",
      "required": [
        "vote_hooks"
      ],
      "properties": {
        "vote_hooks": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Filtered list of proposals for a given wallet address. Returns `FilterListProposalsResponse`",
      "type": "object",
      "required": [
        "filter_list_proposals"
      ],
      "properties": {
        "filter_list_proposals": {
          "type": "object",
          "required": [
            "wallet",
            "wallet_vote"
          ],
          "properties": {
            "limit": {
              "description": "The maximum number of proposals to return as part of this query. If no limit is set a max of 30 proposals will be returned.",
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "start_after": {
              "description": "The proposal ID to start listing proposals after.",
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "status": {
              "description": "Filter by this status or any if omitted or null",
              "anyOf": [
                {
                  "$ref": "#/definitions/Status"
                },
                {
                  "type": "null"
                }
              ]
            },
            "wallet": {
              "description": "Wallet address whose votes will be filtered",
              "type": "string"
            },
            "wallet_vote": {
              "description": "Filter by this vote",
              "allOf": [
                {
                  "$ref": "#/definitions/WalletVote"
                }
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "info"
      ],
      "properties": {
        "info": {
          "type": "object"
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Status": {
      "type": "string",
      "enum": [
        "open",
        "rejected",
        "passed",
        "executed",
        "closed",
        "execution_failed"
      ]
    },
    "Vote": {
      "type": "string",
      "enum": [
        "yes",
        "no",
        "abstain"
      ]
    },
    "WalletVote": {
      "description": "Helper struct for [`crate::msg::QueryMsg::FilterListProposals`] Letting users to specify what types of wallet votes they are looking for",
      "oneOf": [
        {
          "type": "object",
          "required": [
            "voted"
          ],
          "properties": {
            "voted": {
              "type": "object",
              "required": [
                "vote"
              ],
              "properties": {
                "vote": {
                  "$ref": "#/definitions/Vote"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "notvoted"
          ],
          "properties": {
            "notvoted": {
              "type": "object"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "anyvote"
          ],
          "properties": {
            "anyvote": {
              "type": "object"
            }
          },
          "additionalProperties": false
        }
      ]
    }
  }
}
