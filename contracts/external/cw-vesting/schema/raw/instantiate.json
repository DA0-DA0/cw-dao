{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "InstantiateMsg",
  "type": "object",
  "required": [
    "params"
  ],
  "properties": {
    "owner": {
      "type": [
        "string",
        "null"
      ]
    },
    "params": {
      "$ref": "#/definitions/UncheckedVestingParams"
    }
  },
  "additionalProperties": false,
  "definitions": {
    "Curve": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "constant"
          ],
          "properties": {
            "constant": {
              "type": "object",
              "required": [
                "y"
              ],
              "properties": {
                "y": {
                  "$ref": "#/definitions/Uint128"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "saturating_linear"
          ],
          "properties": {
            "saturating_linear": {
              "$ref": "#/definitions/SaturatingLinear"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "piecewise_linear"
          ],
          "properties": {
            "piecewise_linear": {
              "$ref": "#/definitions/PiecewiseLinear"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "PiecewiseLinear": {
      "description": "This is a generalization of SaturatingLinear, steps must be arranged with increasing time (u64). Any point before first step gets the first value, after last step the last value. Otherwise, it is a linear interpolation between the two closest points. Vec of length 1 -> Constant Vec of length 2 -> SaturatingLinear",
      "type": "object",
      "required": [
        "steps"
      ],
      "properties": {
        "steps": {
          "type": "array",
          "items": {
            "type": "array",
            "items": [
              {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              {
                "$ref": "#/definitions/Uint128"
              }
            ],
            "maxItems": 2,
            "minItems": 2
          }
        }
      }
    },
    "SaturatingLinear": {
      "description": "min_y for all x <= min_x, max_y for all x >= max_x, linear in between",
      "type": "object",
      "required": [
        "max_x",
        "max_y",
        "min_x",
        "min_y"
      ],
      "properties": {
        "max_x": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "max_y": {
          "$ref": "#/definitions/Uint128"
        },
        "min_x": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "min_y": {
          "$ref": "#/definitions/Uint128"
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "UncheckedDenom": {
      "description": "A denom that has not been checked to confirm it points to a valid asset.",
      "oneOf": [
        {
          "description": "A native (bank module) asset.",
          "type": "object",
          "required": [
            "native"
          ],
          "properties": {
            "native": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "description": "A cw20 asset.",
          "type": "object",
          "required": [
            "cw20"
          ],
          "properties": {
            "cw20": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "UncheckedVestingParams": {
      "type": "object",
      "required": [
        "amount",
        "denom",
        "recipient",
        "vesting_schedule"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "denom": {
          "$ref": "#/definitions/UncheckedDenom"
        },
        "description": {
          "type": [
            "string",
            "null"
          ]
        },
        "recipient": {
          "type": "string"
        },
        "title": {
          "type": [
            "string",
            "null"
          ]
        },
        "vesting_schedule": {
          "$ref": "#/definitions/Curve"
        }
      },
      "additionalProperties": false
    }
  }
}
